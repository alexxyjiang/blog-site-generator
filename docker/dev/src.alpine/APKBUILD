# Contributor: the Node.JS contributors
# Maintainer: Alex Jiang <alexxyjiang@gmail.com>
pkgname=nodejs-full
pkgver=14.17.3
pkgrel=0
pkgdesc="JavaScript runtime built on V8 engine - LTS version"
url="https://nodejs.org/"
arch="all !mips64 !mips64el !riscv64"
license="MIT"
depends="ca-certificates nghttp2-libs>=1.41"
makedepends="
    brotli-dev
    c-ares-dev
    icu-dev
    linux-headers
    nghttp2-dev
    ninja
    openssl-dev
    python3
    zlib-dev
"
install="$pkgname.post-upgrade"
subpackages="$pkgname-dev $pkgname-doc"
source="
    ${pkgname}-${pkgver}.tar.gz::https://github.com/nodejs/node/archive/refs/tags/v$pkgver.tar.gz
"
builddir="$srcdir/node-$pkgver"

prepare() {
    default_prepare
    # Remove bundled dependencies that we're not using.
    rm -rf deps/brotli deps/cares deps/openssl deps/zlib
}

build() {
    # Add defines recommended in libuv readme.
    local common_flags="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

    # Compiling with O2 instead of Os increases binary size by ~10%
    # (53.1 MiB -> 58.6 MiB), but also increases performance by ~20%
    # according to v8/web-tooling-benchmark. Node.js is quite huge anyway;
    # there are better options for size constrained environments.
    export CFLAGS="${CFLAGS/-Os/-O2} $common_flags"
    export CXXFLAGS="${CXXFLAGS/-Os/-O2} $common_flags"
    export CPPFLAGS="${CPPFLAGS/-Os/-O2} $common_flags"

    case "$CARCH" in
    mips*) _carchflags="--with-mips-arch-variant=r1 --with-mips-float-abi=soft";;
    esac

    # NOTE: We use bundled libuv because they don't care much about backward
    # compatibility and it has happened several times in past that we
    # couldn't upgrade nodejs package in stable branches to fix CVEs due to
    # libuv incompatibility.
    #
    # NOTE: We don't package the bundled npm - it's a separate project with
    # its own release cycle and version numbering, so it's better to keep
    # it in a standalone aport.
    #
    # TODO: After icu package is modified to split data into multiple
    # variants, change --with-intl to "system-icu".
    ./configure --prefix=/usr --ninja \
        $_carchflags \
        --shared-brotli \
        --shared-zlib \
        --shared-openssl \
        --shared-cares \
        --shared-nghttp2 \
        --openssl-use-def-ca-store \
        --with-icu-default-data-dir=$(icu-config --icudatadir) \
        --with-intl=small-icu

    make BUILDTYPE=Release
}

check() {
    cd "$builddir"/out/Release

    ./node -e 'console.log("Hello, world!")'
    ./node -e "require('assert').equal(process.versions.node, '$pkgver')"
}

package() {
    make DESTDIR="$pkgdir" install
}

dev() {
    provides="nodejs-lts-dev=$pkgver"  # for backward compatibility
    default_dev
}

sha512sums="
3c55c4b5a926df24ecb16562aa948a4c23a3501fe1d9f564e4cace3b6ede311abac07b56f0874ae58b43b2e8691ded2668862d923f0729cd2b2d2db09158e48a  nodejs-full-14.17.3.tar.gz
"
